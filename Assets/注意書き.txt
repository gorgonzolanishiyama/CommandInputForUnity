【プロジェクト名】
Input Command Manager

【概要】
Input Command ManagerはUnityゲーム開発向けのコマンド管理システムです。プレイヤーの入力を監視し、登録されたコマンドと照合して該当するコマンドを検知することができます。キー入力やコントローラー入力を扱いやすくし、ゲーム内のアクションや操作を柔軟かつ効率的に管理できることを目指しています。
また、本プログラムはベストな方法ではなく試験的な方法を提示するものであり使用する際には一定の改編が必要な可能性がございます。


【機能】
コマンドの登録: ゲーム内のコマンド（例：ジャンプ、攻撃、スキルなど）を登録できます。コマンドは正規表現を使用して柔軟に設定できます。
入力の監視: プレイヤーの入力を常時監視し、登録されたコマンドと照合します。
入力猶予時間: コマンドの登録時に入力猶予時間を設定できます。一定フレーム内にコマンドが入力された場合に該当するコマンドとして検知されます。
デバッグ用機能: 入力の確認やコマンドの検出結果をデバッグ用に表示できます。


【使い方】
1.InputMangerにてキーを確認します(Edit⇒PrjectSetting⇒InputManager)。
2.キーやボタンに対応するコマンドをScriptableObjectとして登録します（KeyListクラス）。
3.コマンドを登録するためのScriptableObjectを作成し、コマンドの出力文字、入力猶予時間、コマンドの正規表現を設定します（CommandListStoreクラス）。
4InputGazerコンポーネントをプレイヤーキャラクターにアタッチします。InputGazerは入力を監視し、登録されたコマンドと照合します。
5InputGazerを通じてコマンドが検出された場合、対応するイベントを実行します。

【注意事項】
コマンドの正規表現は入力の照合に使用されます。正確な正規表現を設定する必要があります。不正確な設定はコマンドの検出に影響を与える可能性があります。
入力猶予時間はゲームの仕様に合わせて適切に設定する必要があります。猶予時間が短すぎるとコマンドが認識されない可能性があります。

【ライセンス】
このプロジェクトはMITライセンスのもとで公開されています。詳細なライセンス情報はLICENSEファイルを参照してください。

【開発環境】
Unity 2021.3.26f1

【サポート】
本プロジェクトに関するサポートやバグ報告はGitHubのIssueページを使用してください。


【バージョン履歴】
v1.0.0: 初版リリース (2023年7月21日)

【著作権者】
ゴルゴンゾーラ西山

【免責事項】
このプロジェクトの使用によるいかなる損害も、著作権者は責任を負いません。

【ReadMeを下書きしたGPT】
chatGPT Ver3.5